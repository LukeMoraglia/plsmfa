% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perm_plsmfa.R
\name{perm_plsmfa}
\alias{perm_plsmfa}
\title{Permutation tests for the eigenvalues of PLSMFA}
\usage{
perm_plsmfa(
  data1,
  data2,
  column_design1,
  column_design2,
  center1 = TRUE,
  center2 = TRUE,
  scale1 = "SS1",
  scale2 = "SS1",
  n_iter = 1000,
  compact = FALSE,
  bootstrap_first_singval = FALSE
)
}
\arguments{
\item{data1}{The first data matrix, also called "X", with \eqn{N} rows and \eqn{I} columns
organized into \eqn{K} subtables.}

\item{data2}{The second data matrix, also called "Y", with \eqn{N} rows and \eqn{J} columns
organized into \eqn{M} subtables.}

\item{column_design1}{A vector of length \eqn{I} that gives the subtable membership of the X variables}

\item{column_design2}{A vector of length \eqn{J} that gives the subtable membership of the Y variables}

\item{center1}{(default TRUE) Whether to center \code{data1}}

\item{center2}{(default TRUE) Whether to center \code{data2}}

\item{scale1}{(default "SS1") Whether to scale \code{data1}.
Any acceptable input to \code{\link[ExPosition]{expo.scale}}}

\item{scale2}{(default "SS1") Whether to scale \code{data2}
Any acceptable input to \code{\link[ExPosition]{expo.scale}}}

\item{n_iter}{(default 1000) The number of permutations to compute}

\item{compact}{(default FALSE) If TRUE, returns only the p values. If FALSE, includes the results of each iteration.}

\item{bootstrap_first_singval}{(default FALSE) If TRUE, uses a bootstrap sample
to compute the first singular values of the subtables. Setting to TRUE adds
considerable computation time.}
}
\value{
A list containing:
   \item{\code{p_eig}}{the p value of each eigenvalue}
   \item{\code{p_inertia}}{the p value for the total inertia}
   \item{\code{p_percent_inertia}}{the p values for the percentage of inertia explained by each dimension}
   and if \code{compact = FALSE}:
   \item{\code{fixed_eig}}{the observed eigenvalues from PLSMFA}
   \item{\code{fixed_inertia}}{the observed inertia from PLSMFA}
   \item{\code{fixed_percent_inertia}}{the obeserved percentage of inertia explained by each dimension from PLSMFA}
   \item{\code{perm_eig}}{the eigenvalues from each permutation}
   \item{\code{perm_inertia}}{the inertia from each permutation}
   \item{\code{perm_percent_inertia}}{the percentage of inertia explained by the dimensions of each permutation}
}
\description{
Permutation methods for PLSMFA are a beta feature. They have not been systematically validated.
}
\details{
The permutation test randomizes each column of the (normalized) data tables and performs PLSMFA
on the permuted data tables. This randomization simulates the pattern expected under the null hypothesis of no relationships
between the variables. This process repeats \code{n_iter} times to create a null distribution of the eigenvalues, from
which probabilities for the eigenvalues, total inertia, and percentage of inertia are computed.

Some additional details: PLSMFA starts off by normalizing each subtable, which changes the inertia of each subtable.
If the original data were permuted, the first singular value of each subtable would change, and in the case of the
unidimensional subtables, the first singular value would decrease, sometimes by a lot. When the first singular value
decreases, the subtable is not reduced by as much, and so the normalized permuted subtable would have more inertia than the
normalized original subtable. This translates into more inertia for the cross-product matrix that is decomposed by the
SVD, and so it would make comparisons between the eigenvalues of the original result and the permuted results difficult.

The solution implemented here is to instead permute the normalized data tables, so that there are no relationships between
the variables of the normalized data tables. However, this means that the permutation test acts as if the first singular
value of each subtable is a fixed value, which may not necessarily be the case. In order to add variability to the
first singular value, but still keep the inertia comparable between iterations, there is the option to bootstrap the
first singular values. This option (\code{bootstrap_first_singval}) is similar to the process described in
\code{\link{boot_plsmfa}} where samples are drawn with replacement to simulate fluctuations in the data due to sampling.
While this option may increase the robustness of the permutation test, it also adds considerable computational time
which could be apparent when the data have many variables and/or subtables.
}
\author{
Luke Moraglia
}
